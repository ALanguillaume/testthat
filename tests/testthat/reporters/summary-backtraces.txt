Backtraces: 123456

══ Failed ══════════════════════════════════════════════════════════════════════
── 1. Error: errors thrown at block level are entraced (@backtraces.R#6)  ──────
foo
Backtrace:
 1. f()
 2. g()

── 2. Error: errors thrown from a quasi-labelled argument are entraced (@backtra
foo
Backtrace:
 1. testthat::expect_is(foo(), "foo")
 4. foo()

── 3. Error: errors thrown from a quasi-labelled argument are entraced (deep cas
foo
Backtrace:
 1. testthat::expect_is(f(), "foo")
 4. f()
 5. g()
 9. foo()

── 4. Error: errors thrown from a quasi-labelled argument are entraced (deep dee
foobar
Backtrace:
 1. f()
 2. g()
 6. foo()
 7. bar()

── 5. Failure: failed expect_error() prints a backtrace (@backtraces.R#35)  ────
`f()` threw an condition with unexpected class.

Backtrace:
 1. testthat::expect_condition(f(), class = "foo")
 6. f()
 7. signaller()

── 6. Failure: failed expect_error() prints a backtrace (@backtraces.R#38)  ────
`f()` threw an error with unexpected message.
Expected match: "foo"
Actual message: "bar"
Backtrace:
 1. testthat::expect_error(f(), "foo")
 6. f()
 7. signaller()

══ DONE ════════════════════════════════════════════════════════════════════════
